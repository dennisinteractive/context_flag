<?php
/**
 * @file
 * Main module file for the context_flag module.
 */

/**
 * Implements hook_context_plugins().
 */
function context_flag_context_plugins() {
  $plugins = array();
  $path = drupal_get_path('module', 'context_flag') . 'conditions/';
  // Plugins: Comment Flags.
  $plugins['comment_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.comment.inc',
      'class' => 'ContextFlagCommentActive',
      'parent' => 'context_condition',
    ),
  );
  /*
  $plugins['comment_inactive'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.comment.inc',
      'class' => 'ContextFlagCommentInactive',
      'parent' => 'context_condition',
    ),
  );
  */

  // Plugins: Entity Flags.
  $plugins['entity_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.entity.inc',
      'class' => 'ContextFlagEntityActive',
      'parent' => 'context_condition',
    ),
  );
  /*
  $plugins['entity_inactive'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.entity.inc',
      'class' => 'ContextFlagEntityInactive',
      'parent' => 'context_condition',
    ),
  );
  */

  // Plugins: Node Flags.
  $plugins['node_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.node.inc',
      'class' => 'ContextFlagNodeActive',
      'parent' => 'context_condition',
    ),
  );
  /*
  $plugins['node_inactive'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.node.inc',
      'class' => 'ContextFlagNodeInactive',
      'parent' => 'context_condition',
    ),
  );
  */

  // Plugins: User Page Flags.
  $plugins['user_page_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user_page.inc',
      'class' => 'ContextFlagUserPageActive',
      'parent' => 'context_condition',
    ),
  );
  /*
  $plugins['user_page_inactive'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user_page.inc',
      'class' => 'ContextFlagUserPageInactive',
      'parent' => 'context_condition',
    ),
  );
  */

  // Plugins: User Account Flags.
  $plugins['user_account_active'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user.inc',
      'class' => 'ContextFlagUserAccountActive',
      'parent' => 'context_condition',
    ),
  );
  /*
  $plugins['user_account_inactive'] = array(
    'handler' => array(
      'path' => $path,
      'file' => 'context_flag_condition.user.inc',
      'class' => 'ContextFlagUserAccountInactive',
      'parent' => 'context_condition',
    ),
  );
  */
  return $plugins;
}

/**
 * Implements hook_context_registry().
 */
function context_flag_context_registry() {
  return array(
    'conditions' => array(
      // Comment conditions.
      'comment_active' => array(
        'title' => 'Comment flag active',
        'description' => t('Enable this context when this Flag is active.'),
        'plugin' => 'comment_active',
      ),
      /*
      'comment_inactive' => array(
        'title' => 'Comment flag inactive',
        'description' => t('Enable this context when this Flag is inactive.'),
        'plugin' => 'comment_inactive',
      ),
      */

      // Entity conditions.
      'entity_active' => array(
        'title' => 'Entity flag active',
        'description' => t('Enable this context when this Flag is active.'),
        'plugin' => 'entity_active',
      ),
      /*
      'entity_inactive' => array(
        'title' => 'Entity flag inactive',
        'description' => t('Enable this context when this Flag is inactive.'),
        'plugin' => 'entity_inactive',
      ),
      */

      // Node conditions.
      'node_active' => array(
        'title' => 'Node flag active',
        'description' => t('Enable this context when these Flags are active.'),
        'plugin' => 'node_active',
      ),
      /*
      'node_inactive' => array(
        'title' => 'Node flag inactive',
        'description' => t('Enable this context when this Flag is inactive.'),
        'plugin' => 'node_inactive',
      ),
      */

      // User page conditions.
      'user_page_active' => array(
        'title' => 'User page flag active',
        'description' => t('Enable this context when viewing a user profile and this Flag is active.'),
        'plugin' => 'user_page_active',
      ),
      /*
      'user_page_inactive' => array(
        'title' => 'User page flag inactive',
        'description' => t('Enable this context when viewing a user profile and this Flag is inactive.'),
        'plugin' => 'user_page_inactive',
      ),
      */

      // User account conditions.
      'user_account_active' => array(
        'title' => 'Current user - flag active',
        'description' => t('Enable this context when this flag is active for the currently logged-in user.'),
        'plugin' => 'user_account_active',
      ),
      /*
      'user_account_inactive' => array(
        'title' => 'Current user - flag inactive',
        'description' => t('Enable this context when this flag is inactive for the currently logged-in user.'),
        'plugin' => 'user_account_inactive',
      ),
      */
    ),
  );
}

/**
 * Implements hook_context_page_condition().
 */
function context_flag_context_page_condition() {
  // Use the conditions stored in the registry to trigger contexts.
  $contexts = context_flag_context_registry();
  foreach($contexts['conditions'] as $delta => $context) {
    // The user_account_active condition needs the user object passed to it.
    if ($context['plugin'] === 'user_account_active') {
      if ($plugin = context_get_plugin('condition', $context['plugin'])) {
        global $user;
        $plugin->execute($user);
      }
    }
    // Anything that doesn't have a special condition.
    else {
      if ($plugin = context_get_plugin('condition', $context['plugin'])) {
        $plugin->execute();
      }
    }
  }
}

/**
 * Helper function for managing the "Require all flags" checkbox on forms.
 */
function _context_flag_requireall_form($str_setting, &$value = FALSE) {
  $form = array(
    $str_setting => array(
      '#title' => t('Require all flags'),
      '#type' => 'checkbox',
      '#description' => t('Trigger this context only when ALL selections are active.'),
      '#default_value' => $value,
    ),
  );
  return $form;
}
